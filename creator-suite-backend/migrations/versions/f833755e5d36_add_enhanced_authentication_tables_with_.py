"""Add enhanced authentication tables with correct data types

Revision ID: f833755e5d36
Revises: 3014a141b921
Create Date: 2025-09-12 13:33:16.623464

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f833755e5d36'
down_revision: Union[str, Sequence[str], None] = '3014a141b921'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rate_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(), nullable=False),
    sa.Column('limit_type', sa.String(), nullable=False),
    sa.Column('endpoint', sa.String(), nullable=True),
    sa.Column('request_count', sa.Integer(), nullable=True),
    sa.Column('window_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('window_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('blocked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rate_limits_id'), 'rate_limits', ['id'], unique=False)
    op.create_index(op.f('ix_rate_limits_identifier'), 'rate_limits', ['identifier'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('resource', sa.String(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('bot_integrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('platform_user_id', sa.String(), nullable=False),
    sa.Column('platform_username', sa.String(), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bot_integrations_id'), 'bot_integrations', ['id'], unique=False)
    op.create_table('mfa_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('totp_secret', sa.String(), nullable=True),
    sa.Column('backup_codes', sa.JSON(), nullable=True),
    sa.Column('last_used_method', sa.String(), nullable=True),
    sa.Column('sms_phone_number', sa.String(), nullable=True),
    sa.Column('email_backup', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_mfa_settings_id'), 'mfa_settings', ['id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_token', sa.String(), nullable=False),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_session_token'), 'user_sessions', ['session_token'], unique=True)
    op.add_column('credit_transactions', sa.Column('service_id', sa.Integer(), nullable=True))
    op.add_column('credit_transactions', sa.Column('task_id', sa.String(), nullable=True))
    op.add_column('credit_transactions', sa.Column('payment_method', sa.String(), nullable=True))
    op.add_column('credit_transactions', sa.Column('payment_id', sa.String(), nullable=True))
    op.add_column('credit_transactions', sa.Column('balance_before', sa.Float(), nullable=False))
    op.add_column('credit_transactions', sa.Column('balance_after', sa.Float(), nullable=False))
    op.add_column('credit_transactions', sa.Column('transaction_metadata', sa.JSON(), nullable=True))
    op.alter_column('credit_transactions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('credit_transactions', 'amount',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
    op.alter_column('credit_transactions', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('credit_transactions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_credit_transactions_id'), 'credit_transactions', ['id'], unique=False)
    op.create_foreign_key(None, 'credit_transactions', 'creation_tasks', ['task_id'], ['id'])
    op.create_foreign_key(None, 'credit_transactions', 'services', ['service_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'credit_transactions', type_='foreignkey')
    op.drop_constraint(None, 'credit_transactions', type_='foreignkey')
    op.drop_index(op.f('ix_credit_transactions_id'), table_name='credit_transactions')
    op.alter_column('credit_transactions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('credit_transactions', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('credit_transactions', 'amount',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('credit_transactions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('credit_transactions', 'transaction_metadata')
    op.drop_column('credit_transactions', 'balance_after')
    op.drop_column('credit_transactions', 'balance_before')
    op.drop_column('credit_transactions', 'payment_id')
    op.drop_column('credit_transactions', 'payment_method')
    op.drop_column('credit_transactions', 'task_id')
    op.drop_column('credit_transactions', 'service_id')
    op.drop_index(op.f('ix_user_sessions_session_token'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_mfa_settings_id'), table_name='mfa_settings')
    op.drop_table('mfa_settings')
    op.drop_index(op.f('ix_bot_integrations_id'), table_name='bot_integrations')
    op.drop_table('bot_integrations')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_rate_limits_identifier'), table_name='rate_limits')
    op.drop_index(op.f('ix_rate_limits_id'), table_name='rate_limits')
    op.drop_table('rate_limits')
    # ### end Alembic commands ###
